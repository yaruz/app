// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AccountSettings struct {
	LangID               uint64   `protobuf:"varint,1,opt,name=LangID,proto3" json:"LangID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountSettings) Reset()         { *m = AccountSettings{} }
func (m *AccountSettings) String() string { return proto.CompactTextString(m) }
func (*AccountSettings) ProtoMessage()    {}
func (*AccountSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{0}
}

func (m *AccountSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountSettings.Unmarshal(m, b)
}
func (m *AccountSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountSettings.Marshal(b, m, deterministic)
}
func (m *AccountSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountSettings.Merge(m, src)
}
func (m *AccountSettings) XXX_Size() int {
	return xxx_messageInfo_AccountSettings.Size(m)
}
func (m *AccountSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountSettings.DiscardUnknown(m)
}

var xxx_messageInfo_AccountSettings proto.InternalMessageInfo

func (m *AccountSettings) GetLangID() uint64 {
	if m != nil {
		return m.LangID
	}
	return 0
}

type JwtClaims struct {
	User                 *Account `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	AccessToken          string   `protobuf:"bytes,2,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JwtClaims) Reset()         { *m = JwtClaims{} }
func (m *JwtClaims) String() string { return proto.CompactTextString(m) }
func (*JwtClaims) ProtoMessage()    {}
func (*JwtClaims) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{1}
}

func (m *JwtClaims) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JwtClaims.Unmarshal(m, b)
}
func (m *JwtClaims) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JwtClaims.Marshal(b, m, deterministic)
}
func (m *JwtClaims) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JwtClaims.Merge(m, src)
}
func (m *JwtClaims) XXX_Size() int {
	return xxx_messageInfo_JwtClaims.Size(m)
}
func (m *JwtClaims) XXX_DiscardUnknown() {
	xxx_messageInfo_JwtClaims.DiscardUnknown(m)
}

var xxx_messageInfo_JwtClaims proto.InternalMessageInfo

func (m *JwtClaims) GetUser() *Account {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *JwtClaims) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type Account struct {
	Owner                string            `protobuf:"bytes,1,opt,name=Owner,proto3" json:"Owner,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	CreatedTime          string            `protobuf:"bytes,3,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	UpdatedTime          string            `protobuf:"bytes,4,opt,name=UpdatedTime,proto3" json:"UpdatedTime,omitempty"`
	ID                   string            `protobuf:"bytes,5,opt,name=ID,proto3" json:"ID,omitempty"`
	Type                 string            `protobuf:"bytes,6,opt,name=Type,proto3" json:"Type,omitempty"`
	DisplayName          string            `protobuf:"bytes,7,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	FirstName            string            `protobuf:"bytes,8,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName             string            `protobuf:"bytes,9,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Avatar               string            `protobuf:"bytes,10,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	PermanentAvatar      string            `protobuf:"bytes,11,opt,name=PermanentAvatar,proto3" json:"PermanentAvatar,omitempty"`
	Email                string            `protobuf:"bytes,12,opt,name=Email,proto3" json:"Email,omitempty"`
	EmailVerified        bool              `protobuf:"varint,13,opt,name=EmailVerified,proto3" json:"EmailVerified,omitempty"`
	Phone                string            `protobuf:"bytes,14,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Location             string            `protobuf:"bytes,15,opt,name=Location,proto3" json:"Location,omitempty"`
	Address              []string          `protobuf:"bytes,16,rep,name=Address,proto3" json:"Address,omitempty"`
	Affiliation          string            `protobuf:"bytes,17,opt,name=Affiliation,proto3" json:"Affiliation,omitempty"`
	Title                string            `protobuf:"bytes,18,opt,name=Title,proto3" json:"Title,omitempty"`
	IdCardType           string            `protobuf:"bytes,19,opt,name=IdCardType,proto3" json:"IdCardType,omitempty"`
	IdCard               string            `protobuf:"bytes,20,opt,name=IdCard,proto3" json:"IdCard,omitempty"`
	Homepage             string            `protobuf:"bytes,21,opt,name=Homepage,proto3" json:"Homepage,omitempty"`
	Bio                  string            `protobuf:"bytes,22,opt,name=Bio,proto3" json:"Bio,omitempty"`
	Tag                  string            `protobuf:"bytes,23,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Region               string            `protobuf:"bytes,24,opt,name=Region,proto3" json:"Region,omitempty"`
	Language             string            `protobuf:"bytes,25,opt,name=Language,proto3" json:"Language,omitempty"`
	Gender               string            `protobuf:"bytes,26,opt,name=Gender,proto3" json:"Gender,omitempty"`
	Birthday             string            `protobuf:"bytes,27,opt,name=Birthday,proto3" json:"Birthday,omitempty"`
	Education            string            `protobuf:"bytes,28,opt,name=Education,proto3" json:"Education,omitempty"`
	Score                int64             `protobuf:"varint,29,opt,name=Score,proto3" json:"Score,omitempty"`
	Karma                int64             `protobuf:"varint,30,opt,name=Karma,proto3" json:"Karma,omitempty"`
	Ranking              int64             `protobuf:"varint,31,opt,name=Ranking,proto3" json:"Ranking,omitempty"`
	IsDefaultAvatar      bool              `protobuf:"varint,32,opt,name=IsDefaultAvatar,proto3" json:"IsDefaultAvatar,omitempty"`
	IsOnline             bool              `protobuf:"varint,33,opt,name=IsOnline,proto3" json:"IsOnline,omitempty"`
	IsAdmin              bool              `protobuf:"varint,34,opt,name=IsAdmin,proto3" json:"IsAdmin,omitempty"`
	IsGlobalAdmin        bool              `protobuf:"varint,35,opt,name=IsGlobalAdmin,proto3" json:"IsGlobalAdmin,omitempty"`
	IsForbidden          bool              `protobuf:"varint,36,opt,name=IsForbidden,proto3" json:"IsForbidden,omitempty"`
	IsDeleted            bool              `protobuf:"varint,37,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty"`
	SignupApplication    string            `protobuf:"bytes,38,opt,name=SignupApplication,proto3" json:"SignupApplication,omitempty"`
	Hash                 string            `protobuf:"bytes,39,opt,name=Hash,proto3" json:"Hash,omitempty"`
	PreHash              string            `protobuf:"bytes,40,opt,name=PreHash,proto3" json:"PreHash,omitempty"`
	CreatedIp            string            `protobuf:"bytes,41,opt,name=CreatedIp,proto3" json:"CreatedIp,omitempty"`
	LastSigninTime       string            `protobuf:"bytes,42,opt,name=LastSigninTime,proto3" json:"LastSigninTime,omitempty"`
	LastSigninIp         string            `protobuf:"bytes,43,opt,name=LastSigninIp,proto3" json:"LastSigninIp,omitempty"`
	Github               string            `protobuf:"bytes,44,opt,name=Github,proto3" json:"Github,omitempty"`
	Google               string            `protobuf:"bytes,45,opt,name=Google,proto3" json:"Google,omitempty"`
	QQ                   string            `protobuf:"bytes,46,opt,name=QQ,proto3" json:"QQ,omitempty"`
	WeChat               string            `protobuf:"bytes,47,opt,name=WeChat,proto3" json:"WeChat,omitempty"`
	WeChatUnionId        string            `protobuf:"bytes,48,opt,name=WeChatUnionId,proto3" json:"WeChatUnionId,omitempty"`
	Facebook             string            `protobuf:"bytes,49,opt,name=Facebook,proto3" json:"Facebook,omitempty"`
	DingTalk             string            `protobuf:"bytes,50,opt,name=DingTalk,proto3" json:"DingTalk,omitempty"`
	Weibo                string            `protobuf:"bytes,51,opt,name=Weibo,proto3" json:"Weibo,omitempty"`
	Gitee                string            `protobuf:"bytes,52,opt,name=Gitee,proto3" json:"Gitee,omitempty"`
	LinkedIn             string            `protobuf:"bytes,53,opt,name=LinkedIn,proto3" json:"LinkedIn,omitempty"`
	Wecom                string            `protobuf:"bytes,54,opt,name=Wecom,proto3" json:"Wecom,omitempty"`
	Lark                 string            `protobuf:"bytes,55,opt,name=Lark,proto3" json:"Lark,omitempty"`
	Gitlab               string            `protobuf:"bytes,56,opt,name=Gitlab,proto3" json:"Gitlab,omitempty"`
	Adfs                 string            `protobuf:"bytes,57,opt,name=Adfs,proto3" json:"Adfs,omitempty"`
	Baidu                string            `protobuf:"bytes,58,opt,name=Baidu,proto3" json:"Baidu,omitempty"`
	Alipay               string            `protobuf:"bytes,59,opt,name=Alipay,proto3" json:"Alipay,omitempty"`
	Casdoor              string            `protobuf:"bytes,60,opt,name=Casdoor,proto3" json:"Casdoor,omitempty"`
	Infoflow             string            `protobuf:"bytes,61,opt,name=Infoflow,proto3" json:"Infoflow,omitempty"`
	Apple                string            `protobuf:"bytes,62,opt,name=Apple,proto3" json:"Apple,omitempty"`
	AzureAD              string            `protobuf:"bytes,63,opt,name=AzureAD,proto3" json:"AzureAD,omitempty"`
	Slack                string            `protobuf:"bytes,64,opt,name=Slack,proto3" json:"Slack,omitempty"`
	Steam                string            `protobuf:"bytes,65,opt,name=Steam,proto3" json:"Steam,omitempty"`
	Custom               string            `protobuf:"bytes,66,opt,name=Custom,proto3" json:"Custom,omitempty"`
	Ldap                 string            `protobuf:"bytes,67,opt,name=Ldap,proto3" json:"Ldap,omitempty"`
	Properties           map[string]string `protobuf:"bytes,68,rep,name=Properties,proto3" json:"Properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{2}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetCreatedTime() string {
	if m != nil {
		return m.CreatedTime
	}
	return ""
}

func (m *Account) GetUpdatedTime() string {
	if m != nil {
		return m.UpdatedTime
	}
	return ""
}

func (m *Account) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Account) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Account) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Account) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Account) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Account) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Account) GetPermanentAvatar() string {
	if m != nil {
		return m.PermanentAvatar
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *Account) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Account) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Account) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Account) GetAffiliation() string {
	if m != nil {
		return m.Affiliation
	}
	return ""
}

func (m *Account) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Account) GetIdCardType() string {
	if m != nil {
		return m.IdCardType
	}
	return ""
}

func (m *Account) GetIdCard() string {
	if m != nil {
		return m.IdCard
	}
	return ""
}

func (m *Account) GetHomepage() string {
	if m != nil {
		return m.Homepage
	}
	return ""
}

func (m *Account) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

func (m *Account) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Account) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Account) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Account) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Account) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *Account) GetEducation() string {
	if m != nil {
		return m.Education
	}
	return ""
}

func (m *Account) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Account) GetKarma() int64 {
	if m != nil {
		return m.Karma
	}
	return 0
}

func (m *Account) GetRanking() int64 {
	if m != nil {
		return m.Ranking
	}
	return 0
}

func (m *Account) GetIsDefaultAvatar() bool {
	if m != nil {
		return m.IsDefaultAvatar
	}
	return false
}

func (m *Account) GetIsOnline() bool {
	if m != nil {
		return m.IsOnline
	}
	return false
}

func (m *Account) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *Account) GetIsGlobalAdmin() bool {
	if m != nil {
		return m.IsGlobalAdmin
	}
	return false
}

func (m *Account) GetIsForbidden() bool {
	if m != nil {
		return m.IsForbidden
	}
	return false
}

func (m *Account) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

func (m *Account) GetSignupApplication() string {
	if m != nil {
		return m.SignupApplication
	}
	return ""
}

func (m *Account) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Account) GetPreHash() string {
	if m != nil {
		return m.PreHash
	}
	return ""
}

func (m *Account) GetCreatedIp() string {
	if m != nil {
		return m.CreatedIp
	}
	return ""
}

func (m *Account) GetLastSigninTime() string {
	if m != nil {
		return m.LastSigninTime
	}
	return ""
}

func (m *Account) GetLastSigninIp() string {
	if m != nil {
		return m.LastSigninIp
	}
	return ""
}

func (m *Account) GetGithub() string {
	if m != nil {
		return m.Github
	}
	return ""
}

func (m *Account) GetGoogle() string {
	if m != nil {
		return m.Google
	}
	return ""
}

func (m *Account) GetQQ() string {
	if m != nil {
		return m.QQ
	}
	return ""
}

func (m *Account) GetWeChat() string {
	if m != nil {
		return m.WeChat
	}
	return ""
}

func (m *Account) GetWeChatUnionId() string {
	if m != nil {
		return m.WeChatUnionId
	}
	return ""
}

func (m *Account) GetFacebook() string {
	if m != nil {
		return m.Facebook
	}
	return ""
}

func (m *Account) GetDingTalk() string {
	if m != nil {
		return m.DingTalk
	}
	return ""
}

func (m *Account) GetWeibo() string {
	if m != nil {
		return m.Weibo
	}
	return ""
}

func (m *Account) GetGitee() string {
	if m != nil {
		return m.Gitee
	}
	return ""
}

func (m *Account) GetLinkedIn() string {
	if m != nil {
		return m.LinkedIn
	}
	return ""
}

func (m *Account) GetWecom() string {
	if m != nil {
		return m.Wecom
	}
	return ""
}

func (m *Account) GetLark() string {
	if m != nil {
		return m.Lark
	}
	return ""
}

func (m *Account) GetGitlab() string {
	if m != nil {
		return m.Gitlab
	}
	return ""
}

func (m *Account) GetAdfs() string {
	if m != nil {
		return m.Adfs
	}
	return ""
}

func (m *Account) GetBaidu() string {
	if m != nil {
		return m.Baidu
	}
	return ""
}

func (m *Account) GetAlipay() string {
	if m != nil {
		return m.Alipay
	}
	return ""
}

func (m *Account) GetCasdoor() string {
	if m != nil {
		return m.Casdoor
	}
	return ""
}

func (m *Account) GetInfoflow() string {
	if m != nil {
		return m.Infoflow
	}
	return ""
}

func (m *Account) GetApple() string {
	if m != nil {
		return m.Apple
	}
	return ""
}

func (m *Account) GetAzureAD() string {
	if m != nil {
		return m.AzureAD
	}
	return ""
}

func (m *Account) GetSlack() string {
	if m != nil {
		return m.Slack
	}
	return ""
}

func (m *Account) GetSteam() string {
	if m != nil {
		return m.Steam
	}
	return ""
}

func (m *Account) GetCustom() string {
	if m != nil {
		return m.Custom
	}
	return ""
}

func (m *Account) GetLdap() string {
	if m != nil {
		return m.Ldap
	}
	return ""
}

func (m *Account) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func init() {
	proto.RegisterType((*AccountSettings)(nil), "proto.AccountSettings")
	proto.RegisterType((*JwtClaims)(nil), "proto.JwtClaims")
	proto.RegisterType((*Account)(nil), "proto.Account")
	proto.RegisterMapType((map[string]string)(nil), "proto.Account.PropertiesEntry")
}

func init() {
	proto.RegisterFile("account.proto", fileDescriptor_8e28828dcb8d24f0)
}

var fileDescriptor_8e28828dcb8d24f0 = []byte{
	// 1014 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x95, 0x6d, 0x73, 0x1b, 0x35,
	0x10, 0xc7, 0xc7, 0x49, 0x9a, 0xc4, 0x4a, 0x93, 0xb4, 0x47, 0x29, 0x4b, 0x28, 0xc1, 0x98, 0x52,
	0x5c, 0x28, 0x01, 0x52, 0x1e, 0x4a, 0x4b, 0x0b, 0x8e, 0x9d, 0xa4, 0x07, 0x19, 0x9a, 0x38, 0x0e,
	0x9d, 0xe1, 0x9d, 0x6c, 0xc9, 0x17, 0x8d, 0xef, 0xa4, 0x1b, 0xdd, 0xb9, 0x19, 0xf3, 0x09, 0xf8,
	0xd8, 0xcc, 0xee, 0xea, 0x1c, 0x3b, 0xbc, 0xb2, 0x7e, 0xff, 0x5d, 0xad, 0xd6, 0xbb, 0x2b, 0x9d,
	0xd8, 0x94, 0xc3, 0xa1, 0x9b, 0xd8, 0x72, 0x2f, 0xf7, 0xae, 0x74, 0xd1, 0x2d, 0xfa, 0x69, 0x3e,
	0x16, 0xdb, 0x6d, 0xd6, 0xcf, 0x75, 0x59, 0x1a, 0x9b, 0x14, 0xd1, 0x7d, 0xb1, 0x7a, 0x22, 0x6d,
	0x12, 0x77, 0xa1, 0xd6, 0xa8, 0xb5, 0x56, 0x7a, 0x81, 0x9a, 0x67, 0xa2, 0xfe, 0xfb, 0x55, 0xd9,
	0x49, 0xa5, 0xc9, 0x8a, 0xa8, 0x29, 0x56, 0x2e, 0x0a, 0xed, 0xc9, 0x65, 0x63, 0x7f, 0x8b, 0x83,
	0xee, 0x85, 0x50, 0x3d, 0xb2, 0x45, 0x0d, 0xb1, 0xd1, 0x1e, 0x0e, 0x75, 0x51, 0xf4, 0xdd, 0x58,
	0x5b, 0x58, 0x6a, 0xd4, 0x5a, 0xf5, 0xde, 0xbc, 0xd4, 0xfc, 0x77, 0x5b, 0xac, 0x85, 0x3d, 0xd1,
	0x3d, 0x71, 0xeb, 0xcd, 0x95, 0x0d, 0x21, 0xeb, 0x3d, 0x86, 0x28, 0x12, 0x2b, 0x7f, 0xca, 0x4c,
	0x87, 0xcd, 0xb4, 0xc6, 0xb8, 0x1d, 0xaf, 0x65, 0xa9, 0x55, 0xdf, 0x64, 0x1a, 0x96, 0x39, 0xee,
	0x9c, 0x84, 0x1e, 0x17, 0xb9, 0x9a, 0x79, 0xac, 0xb0, 0xc7, 0x9c, 0x14, 0x6d, 0x89, 0xa5, 0xb8,
	0x0b, 0xb7, 0xc8, 0xb0, 0x14, 0x77, 0xf1, 0x9c, 0xfe, 0x34, 0xd7, 0xb0, 0xca, 0xe7, 0xe0, 0x1a,
	0xa3, 0x74, 0x4d, 0x91, 0xa7, 0x72, 0x4a, 0x29, 0xac, 0x71, 0x94, 0x39, 0x29, 0x7a, 0x20, 0xea,
	0x47, 0xc6, 0x17, 0x25, 0xd9, 0xd7, 0xc9, 0x7e, 0x2d, 0x44, 0x3b, 0x62, 0xfd, 0x44, 0x06, 0x63,
	0x9d, 0x8c, 0x33, 0xc6, 0x22, 0xb7, 0xdf, 0xc9, 0x52, 0x7a, 0x10, 0x64, 0x09, 0x14, 0xb5, 0xc4,
	0xf6, 0xa9, 0xf6, 0x99, 0xb4, 0xda, 0x96, 0xc1, 0x61, 0x83, 0x1c, 0x6e, 0xca, 0x58, 0xaf, 0xc3,
	0x4c, 0x9a, 0x14, 0x6e, 0x73, 0xbd, 0x08, 0xa2, 0x87, 0x62, 0x93, 0x16, 0x7f, 0x69, 0x6f, 0x46,
	0x46, 0x2b, 0xd8, 0x6c, 0xd4, 0x5a, 0xeb, 0xbd, 0x45, 0x11, 0xf7, 0x9e, 0x5e, 0x3a, 0xab, 0x61,
	0x8b, 0xf7, 0x12, 0x50, 0xbe, 0x6e, 0x28, 0x4b, 0xe3, 0x2c, 0x6c, 0x87, 0x7c, 0x03, 0x47, 0x20,
	0xd6, 0xda, 0x4a, 0x79, 0x5d, 0x14, 0x70, 0xa7, 0xb1, 0xdc, 0xaa, 0xf7, 0x2a, 0xa4, 0x2e, 0x8f,
	0x46, 0x26, 0x35, 0xbc, 0xf1, 0x6e, 0xe8, 0xf2, 0xb5, 0x84, 0xa7, 0xf5, 0x4d, 0x99, 0x6a, 0x88,
	0xf8, 0x34, 0x82, 0x68, 0x57, 0x88, 0x58, 0x75, 0xa4, 0x57, 0x54, 0xf7, 0xf7, 0xc8, 0x34, 0xa7,
	0x60, 0x85, 0x98, 0xe0, 0x1e, 0x57, 0x88, 0x09, 0xb3, 0x7c, 0xed, 0x32, 0x9d, 0xcb, 0x44, 0xc3,
	0xfb, 0x9c, 0x65, 0xc5, 0xd1, 0x1d, 0xb1, 0x7c, 0x60, 0x1c, 0xdc, 0x27, 0x19, 0x97, 0xa8, 0xf4,
	0x65, 0x02, 0x1f, 0xb0, 0xd2, 0x97, 0x09, 0xc6, 0xed, 0xe9, 0x04, 0x53, 0x05, 0x8e, 0xcb, 0xc4,
	0xdd, 0xb2, 0xc9, 0x04, 0xe3, 0x7e, 0x58, 0x75, 0x8b, 0x19, 0xf7, 0x1c, 0x6b, 0xab, 0xb4, 0x87,
	0x1d, 0xde, 0xc3, 0x84, 0x7b, 0x0e, 0x8c, 0x2f, 0x2f, 0x95, 0x9c, 0xc2, 0x47, 0xbc, 0xa7, 0x62,
	0x9c, 0x8d, 0x43, 0x35, 0x09, 0xe5, 0x7c, 0xc0, 0xb3, 0x31, 0x13, 0xb0, 0x26, 0xe7, 0x43, 0xe7,
	0x35, 0x7c, 0xdc, 0xa8, 0xb5, 0x96, 0x7b, 0x0c, 0xa8, 0xfe, 0x21, 0x7d, 0x26, 0x61, 0x97, 0x55,
	0x02, 0xac, 0x7d, 0x4f, 0xda, 0xb1, 0xb1, 0x09, 0x7c, 0x42, 0x7a, 0x85, 0x38, 0x2d, 0x71, 0xd1,
	0xd5, 0x23, 0x39, 0x49, 0xab, 0x69, 0x69, 0x50, 0xbf, 0x6f, 0xca, 0x98, 0x69, 0x5c, 0xbc, 0xb1,
	0xa9, 0xb1, 0x1a, 0x3e, 0x25, 0x97, 0x19, 0x63, 0xfc, 0xb8, 0x68, 0xab, 0xcc, 0x58, 0x68, 0x92,
	0xa9, 0x42, 0x9c, 0xa6, 0xb8, 0x38, 0x4e, 0xdd, 0x40, 0xa6, 0x6c, 0xff, 0x8c, 0xa7, 0x69, 0x41,
	0xc4, 0x09, 0x88, 0x8b, 0x23, 0xe7, 0x07, 0x46, 0x29, 0x6d, 0xe1, 0x21, 0xf9, 0xcc, 0x4b, 0x58,
	0x0b, 0x4c, 0x28, 0xd5, 0xa5, 0x56, 0xf0, 0x39, 0xd9, 0xaf, 0x85, 0xe8, 0x89, 0xb8, 0x7b, 0x6e,
	0x12, 0x3b, 0xc9, 0xdb, 0x79, 0x9e, 0x9a, 0x50, 0xb1, 0x47, 0x54, 0xb1, 0xff, 0x1b, 0xf0, 0xa6,
	0xbe, 0x96, 0xc5, 0x25, 0x7c, 0xc1, 0x37, 0x15, 0xd7, 0xf8, 0x0f, 0x4e, 0xbd, 0x26, 0xb9, 0x45,
	0x72, 0x85, 0x78, 0x72, 0x78, 0x18, 0xe2, 0x1c, 0x1e, 0x73, 0x17, 0x66, 0x42, 0xf4, 0x48, 0x6c,
	0xe1, 0x8d, 0xc4, 0x43, 0x8c, 0xa5, 0xa7, 0xe2, 0x4b, 0x72, 0xb9, 0xa1, 0x46, 0x4d, 0x71, 0xfb,
	0x5a, 0x89, 0x73, 0xf8, 0x8a, 0xbc, 0x16, 0x34, 0x9a, 0x11, 0x53, 0x5e, 0x4e, 0x06, 0xf0, 0x24,
	0xcc, 0x08, 0x11, 0xe9, 0xce, 0x25, 0xa9, 0x86, 0xaf, 0x83, 0x4e, 0x84, 0x2f, 0xd0, 0xd9, 0x19,
	0xec, 0xf1, 0x0b, 0x74, 0x76, 0x86, 0x7e, 0x6f, 0x75, 0xe7, 0x52, 0x96, 0xf0, 0x0d, 0xfb, 0x31,
	0x61, 0x0f, 0x78, 0x75, 0x61, 0x8d, 0xb3, 0xb1, 0x82, 0x6f, 0xc9, 0xbc, 0x28, 0x62, 0x7f, 0x8f,
	0xe4, 0x50, 0x0f, 0x9c, 0x1b, 0xc3, 0x77, 0x3c, 0x89, 0x15, 0xa3, 0xad, 0x6b, 0x6c, 0xd2, 0x97,
	0xe9, 0x18, 0xf6, 0xd9, 0x56, 0x31, 0x4e, 0xdc, 0x5b, 0x6d, 0x06, 0x0e, 0x9e, 0xf2, 0xdd, 0x24,
	0x40, 0xf5, 0xd8, 0x94, 0x5a, 0xc3, 0xf7, 0xac, 0x12, 0xd0, 0x0d, 0x31, 0x76, 0xac, 0x55, 0x6c,
	0xe1, 0x87, 0x70, 0x43, 0x02, 0x73, 0x9c, 0xa1, 0xcb, 0xe0, 0xc7, 0x2a, 0xce, 0xd0, 0x65, 0xd8,
	0xab, 0x13, 0xe9, 0xc7, 0xf0, 0x13, 0xf7, 0x0a, 0xd7, 0xa1, 0x4e, 0xa9, 0x1c, 0xc0, 0xb3, 0x59,
	0x9d, 0x52, 0x39, 0x40, 0xdf, 0xb6, 0x1a, 0x15, 0xf0, 0x33, 0xfb, 0xe2, 0x1a, 0xa3, 0x1e, 0x48,
	0xa3, 0x26, 0xf0, 0x9c, 0xa3, 0x12, 0xd0, 0xdb, 0x99, 0x9a, 0x5c, 0x4e, 0xe1, 0x45, 0x78, 0x3b,
	0x89, 0x70, 0x0a, 0x3a, 0xb2, 0x50, 0xce, 0x79, 0xf8, 0x85, 0xa7, 0x20, 0x20, 0x4d, 0xbf, 0x1d,
	0xb9, 0x51, 0xea, 0xae, 0xe0, 0x25, 0x67, 0x5e, 0x31, 0x9e, 0x81, 0xe3, 0xa5, 0xe1, 0x15, 0x9f,
	0x41, 0x40, 0xef, 0xdd, 0x3f, 0x13, 0xaf, 0xdb, 0x5d, 0xf8, 0x95, 0x63, 0x05, 0xa4, 0x9b, 0x9b,
	0xca, 0xe1, 0x18, 0x7e, 0x63, 0x7f, 0x02, 0x52, 0x4b, 0x2d, 0x33, 0x68, 0x07, 0x15, 0x01, 0x33,
	0xed, 0x4c, 0x8a, 0xd2, 0x65, 0x70, 0xc0, 0x99, 0x32, 0x51, 0x5d, 0x94, 0xcc, 0xa1, 0x13, 0xea,
	0xa2, 0x64, 0x1e, 0xbd, 0x12, 0xe2, 0xd4, 0xbb, 0x5c, 0xfb, 0xd2, 0xe8, 0x02, 0xba, 0x8d, 0xe5,
	0xd6, 0xc6, 0xfe, 0xee, 0xe2, 0x77, 0x75, 0xef, 0xda, 0xe1, 0xd0, 0x96, 0x7e, 0xda, 0x9b, 0xdb,
	0xb1, 0xf3, 0x52, 0x6c, 0xdf, 0x30, 0xe3, 0xe3, 0x37, 0xd6, 0xd3, 0xf0, 0x41, 0xc5, 0x25, 0xa6,
	0xf9, 0x4e, 0xa6, 0x93, 0xea, 0x7b, 0xca, 0xf0, 0x7c, 0xe9, 0x59, 0xed, 0xa0, 0xfe, 0xf7, 0xda,
	0xde, 0x0b, 0x3a, 0x6d, 0xb0, 0x4a, 0x3f, 0x4f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x4f,
	0x40, 0xd3, 0x32, 0x08, 0x00, 0x00,
}
